# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

env:
  RESOURCE_PATH: ./backend/project/src/main/resources/application.yaml
  working-directory: ./backend/project

on:
  push:
    branches: [ "develop"]
    paths: 
       - 'backend/project/**'
       - '.github/workflows/be.yml'
  pull_request:
    branches: [ "develop"]
    paths: 
       - 'backend/project/**'
       - '.github/workflows/be.yml'

permissions:
  contents: read

jobs:
  build:
  
#     defaults:
#       run:
#         working-directory: "backend/project/**"
        
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        
    - name: Set yaml file
      uses: microsoft/variable-substitution@v1
      with:
        files: ${{ env.RESOURCE_PATH }}
      env:
        spring.datasource.username: ${{ secrets.RDS_ID }}
        spring.datasource.password: ${{ secrets.RDS_SECRETS }}
        
    - name: Grant execute permission for gradlew
      working-directory: ${{env.working-directory}}
      run: chmod +x ./gradlew
    
    - name: Build with Gradle
      working-directory: ${{env.working-directory}}
      run: ./gradlew build
      
    ## gradle caching
#     - name: Gradle Caching
#       uses: actions/cache@v3
#       with:
#         path: |
#           ~/.gradle/caches
#           ~/.gradle/wrapper
#         key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
#         restore-keys: |
#           ${{ runner.os }}-gradle-


    # 전송할 파일을 담을 디렉토리 생성
    - name: Make Directory for deliver
      run: mkdir -p deploy
      shell: bash
      working-directory: ${{env.working-directory}}
